{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01-preview/deploymentTemplate.json",
	"contentVersion": "1.0.0.0",
  "parameters": {
    "vmSSName": {
      "type": "string",
      "defaultValue": "iisvmss",
      "metadata": {
        "description": "The Name of the Scaleset"
      }
    },
    "instanceCount": {
      "type": "string",
      "metadata": {
        "description": "Number of VM instances"
      }
    },
    "dnsNamePrefix": {
      "type": "string",
      "defaultValue": "mtiisskol",
      "metadata": {
        "description": "The Prefix for the DNS names of the new IP address created"
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "The User name of the admininstrative user for each vm created"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The Password of the admininstrative user for each vm created"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "North Europe",
      "allowedValues": [
        "North Europe",
        "West Europe"
      ],
      "metadata": {
        "description": "Deployment location"
      }
    },
    "virtualNetworkName": {
      "type": "string",
      "defaultValue": "vNET"
    },
    "addressPrefix": {
      "type": "string",
      "defaultValue": "10.0.0.0/16"
    },
    "subnetName": {
      "type": "string",
      "defaultValue": "Subnet"
    },
    "subnetPrefix": {
      "type": "string",
      "defaultValue": "10.0.0.0/24"
    }
  },
  "variables": {
    "newStorageAccountSuffix": "[toLower(parameters('vmSSName'))]",
    "baseURL": "https://raw.githubusercontent.com/matousrokos/Azure/master/Templates/Manually-Scaled-VMMS-IIS/Script/",
    "customScriptFile": "SimpleDefaultIIS.ps1",
    "iisConfigurationScriptLocation": "[concat(variables('baseURL'),variables('customScriptFile'))]",
    "imagePublisher": "MicrosoftWindowsServer",
    "imageOffer": "WindowsServer",
    "imageVersion": "2012-R2-Datacenter",
    "storageAccountType": "Standard_LRS",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetId'), '/subnets/', parameters('subnetName'))]",
    "publicIPAddressName": "vmsspublicip",
    "publicIPAddressID": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]",
    "nicName": "networkInterface1",
    "nicId": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]",
    "lbName": "iisloadBalancer",
    "lbID": "[resourceId('Microsoft.Network/loadBalancers',variables('lbName'))]",
    "lbFEName": "loadBalancerFrontEnd",
    "lbWebProbeName": "loadBalancerWebProbe",
    "lbBEAddressPool": "loadBalancerBEAddressPool",
    "lbFEIPConfigID": "[concat(variables('lbID'),'/frontendIPConfigurations/',variables('lbFEName'))]",
    "lbBEAddressPoolID": "[concat(variables('lbID'),'/backendAddressPools/',variables('lbBEAddressPool'))]",
    "lbWebProbeID": "[concat(variables('lbID'),'/probes/',variables('lbWebProbeName'))]",
    "natPoolName": "rdpnatpool",
    "natStartPort": 50000,
    "natEndPort": 50099,
    "natBackendPort": 3389,
    "storageAccountPrefix": [
      "a",
      "g",
      "m",
      "s",
      "y"
    ],
    "diagnosticsStorageAccountName": "[concat('a', variables('newStorageAccountSuffix'))]",
    "diagnosticsStorageAccountResourceGroup": "[resourceGroup().name]",
    "accountid": "[concat('/subscriptions/',subscription().subscriptionId,'/resourceGroups/',variables('diagnosticsStorageAccountResourceGroup'),'/providers/','Microsoft.Storage/storageAccounts/', variables('diagnosticsStorageAccountName'))]",
    "wadlogs": "<WadCfg> <DiagnosticMonitorConfiguration overallQuotaInMB=\"4096\" xmlns=\"http://schemas.microsoft.com/ServiceHosting/2010/10/DiagnosticsConfiguration\"> <DiagnosticInfrastructureLogs scheduledTransferLogLevelFilter=\"Error\"/> <WindowsEventLog scheduledTransferPeriod=\"PT1M\" > <DataSource name=\"Application!*[System[(Level = 1 or Level = 2)]]\" /> <DataSource name=\"Security!*[System[(Level = 1 or Level = 2)]]\" /> <DataSource name=\"System!*[System[(Level = 1 or Level = 2)]]\" /></WindowsEventLog>",
    "wadperfcounters1": "<PerformanceCounters scheduledTransferPeriod=\"PT1M\"><PerformanceCounterConfiguration counterSpecifier=\"\\Processor(_Total)\\% Processor Time\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"CPU utilization\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Processor(_Total)\\% Privileged Time\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"CPU privileged time\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Processor(_Total)\\% User Time\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"CPU user time\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Processor Information(_Total)\\Processor Frequency\" sampleRate=\"PT15S\" unit=\"Count\"><annotation displayName=\"CPU frequency\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\System\\Processes\" sampleRate=\"PT15S\" unit=\"Count\"><annotation displayName=\"Processes\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Process(_Total)\\Thread Count\" sampleRate=\"PT15S\" unit=\"Count\"><annotation displayName=\"Threads\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Process(_Total)\\Handle Count\" sampleRate=\"PT15S\" unit=\"Count\"><annotation displayName=\"Handles\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Memory\\% Committed Bytes In Use\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"Memory usage\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Memory\\Available Bytes\" sampleRate=\"PT15S\" unit=\"Bytes\"><annotation displayName=\"Memory available\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Memory\\Committed Bytes\" sampleRate=\"PT15S\" unit=\"Bytes\"><annotation displayName=\"Memory committed\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Memory\\Commit Limit\" sampleRate=\"PT15S\" unit=\"Bytes\"><annotation displayName=\"Memory commit limit\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk(_Total)\\% Disk Time\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"Disk active time\" locale=\"en-us\"/></PerformanceCounterConfiguration>",
    "wadperfcounters2": "<PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk(_Total)\\% Disk Read Time\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"Disk active read time\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk(_Total)\\% Disk Write Time\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"Disk active write time\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk(_Total)\\Disk Transfers/sec\" sampleRate=\"PT15S\" unit=\"CountPerSecond\"><annotation displayName=\"Disk operations\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk(_Total)\\Disk Reads/sec\" sampleRate=\"PT15S\" unit=\"CountPerSecond\"><annotation displayName=\"Disk read operations\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk(_Total)\\Disk Writes/sec\" sampleRate=\"PT15S\" unit=\"CountPerSecond\"><annotation displayName=\"Disk write operations\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk(_Total)\\Disk Bytes/sec\" sampleRate=\"PT15S\" unit=\"BytesPerSecond\"><annotation displayName=\"Disk speed\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk(_Total)\\Disk Read Bytes/sec\" sampleRate=\"PT15S\" unit=\"BytesPerSecond\"><annotation displayName=\"Disk read speed\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk(_Total)\\Disk Write Bytes/sec\" sampleRate=\"PT15S\" unit=\"BytesPerSecond\"><annotation displayName=\"Disk write speed\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\LogicalDisk(_Total)\\% Free Space\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"Disk free space (percentage)\" locale=\"en-us\"/></PerformanceCounterConfiguration></PerformanceCounters>",
    "wadcfgxstart": "[concat(variables('wadlogs'),variables('wadperfcounters1'),variables('wadperfcounters2'),'<Metrics resourceId=\"')]",
    "wadmetricsresourceid": "[concat('/subscriptions/',subscription().subscriptionId,'/resourceGroups/',resourceGroup().name ,'/providers/','Microsoft.Compute/virtualMachineScaleSets/',parameters('vmssName'))]",
    "wadcfgxend": "[concat('\"><MetricAggregation scheduledTransferPeriod=\"PT1H\"/><MetricAggregation scheduledTransferPeriod=\"PT1M\"/></Metrics></DiagnosticMonitorConfiguration></WadCfg>')]"
  },
	"resources": [
		{
			"type": "Microsoft.Storage/storageAccounts",
			"name": "[concat(variables('storageAccountPrefix')[copyIndex()],variables('newStorageAccountSuffix'))]",
			"apiVersion": "2015-06-15",
			"copy": {
				"name": "storageLoop",
				"count": 5
			},
			"location": "[parameters('location')]",
			"properties": {
				"accountType": "[variables('storageAccountType')]"
			}
		},
		{
			"apiVersion": "2015-06-15",
			"type": "Microsoft.Network/publicIPAddresses",
			"name": "[variables('publicIPAddressName')]",
			"location": "[parameters('location')]",
			"properties": {
				"publicIPAllocationMethod": "Dynamic",
				"dnsSettings": {
					"domainNameLabel": "[parameters('dnsNamePrefix')]"
				}
			}
		},
		{
			"apiVersion": "2015-06-15",
			"name": "[variables('lbName')]",
			"type": "Microsoft.Network/loadBalancers",
			"location": "[parameters('location')]",
			"dependsOn": [
				"[concat('Microsoft.Network/publicIPAddresses/',variables('publicIPAddressName'))]"
			],
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "[variables('lbFEName')]",
            "properties": {
              "publicIPAddress": {
                "id": "[variables('publicIPAddressID')]"
              }
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "[variables('lbBEAddressPool')]"
          }
        ],
        "loadBalancingRules": [
          {
            "name": "weblb",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('lbFEIPConfigID')]"
              },
              "backendAddressPool": {
                "id": "[variables('lbBEAddressPoolID')]"
              },
              "probe": {
                "id": "[variables('lbWebProbeID')]"
              },
              "protocol": "tcp",
              "frontendPort": 80,
              "backendPort": 80,
              "enableFloatingIP": false
            }
          }
        ],
        "inboundNatPools": [
          {
            "name": "[variables('natPoolName')]",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('lbFEIPConfigID')]"
              },
              "protocol": "tcp",
              "frontendPortRangeStart": "[variables('natStartPort')]",
              "frontendPortRangeEnd": "[variables('natEndPort')]",
              "backendPort": "[variables('natBackendPort')]"
            }
          }
        ],
        "probes": [
          {
            "name": "[variables('lbWebProbeName')]",
            "properties": {
              "protocol": "http",
              "port": 80,
              "intervalInSeconds": "15",
              "numberOfProbes": "5",
              "requestPath": "/iisstart.htm"
            }
          }
        ]
      }
		},
		{
			"type": "Microsoft.Compute/virtualMachineScaleSets",
			"apiVersion": "2015-06-15",
			"name": "[parameters('vmSSName')]",
			"location": "[parameters('location')]",
			"tags": {
				"vmsstag1": "Myriad"
			},
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/a',variables('newStorageAccountSuffix'))]",
        "[concat('Microsoft.Storage/storageAccounts/g',variables('newStorageAccountSuffix'))]",
        "[concat('Microsoft.Storage/storageAccounts/m',variables('newStorageAccountSuffix'))]",
        "[concat('Microsoft.Storage/storageAccounts/s',variables('newStorageAccountSuffix'))]",
        "[concat('Microsoft.Storage/storageAccounts/y',variables('newStorageAccountSuffix'))]",
        "[concat('Microsoft.Network/loadBalancers/',variables('lbName'))]"

      ],
			"sku": {
				"name": "Standard_A2",
				"tier": "Standard",
				"capacity": "[parameters('instanceCount')]"
			},
			"properties": {
				"upgradePolicy": {
					"mode": "Manual"
				},
				"virtualMachineProfile": {
					"storageProfile": {
						"osDisk": {
              "vhdContainers": [
                "[concat('https://a',variables('newStorageAccountSuffix'),'.blob.core.windows.net/vmss')]",
                "[concat('https://g',variables('newStorageAccountSuffix'),'.blob.core.windows.net/vmss')]",
                "[concat('https://m',variables('newStorageAccountSuffix'),'.blob.core.windows.net/vmss')]",
                "[concat('https://s',variables('newStorageAccountSuffix'),'.blob.core.windows.net/vmss')]",
                "[concat('https://y',variables('newStorageAccountSuffix'),'.blob.core.windows.net/vmss')]"
              ],
							"name": "vmssosdisk",
							"caching": "ReadOnly",
							"createOption": "FromImage"
						},
						"imageReference": {
							"publisher": "[variables('imagePublisher')]",
							"offer": "[variables('imageOffer')]",
							"sku": "[variables('imageVersion')]",
							"version": "latest"
						}
					},
					"osProfile": {
						"computerNamePrefix": "[parameters('vmSSName')]",
						"adminUsername": "[parameters('adminUsername')]",
						"adminPassword": "[parameters('adminPassword')]"
					},
					"networkProfile": {
						"networkInterfaceConfigurations": [
							{
								"name": "nic1",
								"properties": {
									"primary": "true",
									"ipConfigurations": [
										{
											"name": "ip1",
                      "properties": {
                        "subnet": {
                          "id": "[variables('subnetRef')]"
                        },
                        "loadBalancerBackendAddressPools": [
                          {
                            "id": "[ variables('lbBEAddressPoolID')]"
                          }
                        ],
                        "loadBalancerInboundNatPools": [
                          {
                            "id": "[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/loadBalancers/', variables('lbName'), '/inboundNatPools/', variables('natPoolName'))]"
                          }
                        ]
                      }
										}
									]
								}
							}
						]
					},
					"extensionProfile": {
						"extensions": [
							{
								"name": "iisInstall",
								"properties": {
									"publisher": "Microsoft.Compute",
									"type": "CustomScriptExtension",
									"typeHandlerVersion": "1.4",
									"autoUpgradeMinorVersion": false,
									"settings": {
										"fileUris": [
											"[variables('iisConfigurationScriptLocation')]"
										],
										"commandToExecute": "[concat('powershell -ExecutionPolicy Unrestricted -File ',variables('customScriptFile'),' -FileLocation ',variables('baseUrl'))]"
									}
								}
							},
							{
								"name": "Microsoft.Insights.VMDiagnosticsSettings",
								"properties": {
									"publisher": "Microsoft.Azure.Diagnostics",
									"type": "IaaSDiagnostics",
									"typeHandlerVersion": "1.5",
									"autoUpgradeMinorVersion": true,
									"settings": {
										"xmlCfg": "[base64(concat(variables('wadcfgxstart'),variables('wadmetricsresourceid'),variables('wadcfgxend')))]",
										"storageAccount": "[variables('diagnosticsStorageAccountName')]"
									},
									"protectedSettings": {
										"storageAccountName": "[variables('diagnosticsStorageAccountName')]",
										"storageAccountKey": "[listkeys(variables('accountid'), '2015-06-15').key1]",
										"storageAccountEndPoint": "https://core.windows.net"
									}
								}
							}
						]
					}
				}
			}
		}
	],
	"outputs": {
		"fqdn": {
			"value": "[reference(variables('publicIPAddressID'),providers('Microsoft.Network','publicIPAddresses').apiVersions[0]).dnsSettings.fqdn]",
			"type": "string"
		},
		"ipaddress": {
			"value": "[reference(variables('publicIPAddressID'),providers('Microsoft.Network','publicIPAddresses').apiVersions[0]).ipAddress]",
			"type": "string"
		}
	}
}
